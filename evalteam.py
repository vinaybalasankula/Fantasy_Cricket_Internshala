# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'evalteam.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

import sqlite3
db=sqlite3.connect('Fantasy_cricket_db.db')
cursor=db.cursor()


class Ui_widget(object):
        def setupUi(self, widget):
                widget.setObjectName("widget")
                widget.resize(768, 625)
                widget.setMinimumSize(QtCore.QSize(768, 625))
                widget.setStyleSheet("font: 75 10pt \"Comic Sans MS\";\n"
                "background-color: rgb(204, 204, 204);\n"
                "")
                self.horizontalLayout_7 = QtWidgets.QHBoxLayout(widget)
                self.horizontalLayout_7.setObjectName("horizontalLayout_7")
                self.gridLayout = QtWidgets.QGridLayout()
                self.gridLayout.setObjectName("gridLayout")
                self.l2 = QtWidgets.QLabel(widget)
                self.l2.setObjectName("l2")
                self.gridLayout.addWidget(self.l2, 3, 1, 1, 1)
                self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_2.setObjectName("horizontalLayout_2")
                self.l3 = QtWidgets.QLabel(widget)
                self.l3.setObjectName("l3")
                self.horizontalLayout_2.addWidget(self.l3)
                self.points = QtWidgets.QLabel(widget)
                self.points.setStyleSheet("color: rgb(0, 150, 255);")
                self.points.setObjectName("points")
                self.horizontalLayout_2.addWidget(self.points)
                spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
                self.horizontalLayout_2.addItem(spacerItem)
                self.gridLayout.addLayout(self.horizontalLayout_2, 3, 4, 1, 1)
                self.horizontalLayout = QtWidgets.QHBoxLayout()
                self.horizontalLayout.setObjectName("horizontalLayout")
                spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
                self.horizontalLayout.addItem(spacerItem1)
                self.como1 = QtWidgets.QComboBox(widget)
                self.como1.setStyleSheet("background-color: rgb(255, 255, 255);\n"
                "border:1px solid black;")
                self.como1.setObjectName("como1")
                self.horizontalLayout.addWidget(self.como1)
                self.como1.setPlaceholderText("Select Team ")
                self.como2 = QtWidgets.QComboBox(widget)
                self.como2.setStyleSheet("background-color: rgb(255, 255, 255);\n"
                "border:1px solid black;")
                self.como2.setObjectName("como2")
                self.horizontalLayout.addWidget(self.como2)
                self.como2.setPlaceholderText("Select Match")
                spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
                self.horizontalLayout.addItem(spacerItem2)
                self.gridLayout.addLayout(self.horizontalLayout, 1, 1, 1, 4)
                self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_6.setContentsMargins(-1, 10, -1, 10)
                self.horizontalLayout_6.setObjectName("horizontalLayout_6")
                spacerItem3 = QtWidgets.QSpacerItem(160, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
                self.horizontalLayout_6.addItem(spacerItem3)
                self.cal = QtWidgets.QPushButton(widget)
                self.cal.setObjectName("cal")
                self.horizontalLayout_6.addWidget(self.cal)
                spacerItem4 = QtWidgets.QSpacerItem(160, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
                self.horizontalLayout_6.addItem(spacerItem4)
                self.gridLayout.addLayout(self.horizontalLayout_6, 5, 1, 1, 4)
                spacerItem5 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
                self.gridLayout.addItem(spacerItem5, 3, 0, 2, 1)
                spacerItem6 = QtWidgets.QSpacerItem(0, 0, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
                self.gridLayout.addItem(spacerItem6, 3, 5, 2, 1)
                self.list2 = QtWidgets.QListWidget(widget)
                self.list2.setStyleSheet("background-color: rgb(255, 255, 255);\n"
                "border:1px solid black;color:rgb(40,110,255);")
                self.list2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
                self.list2.setObjectName("list2")
                # self.list2.setStyleSheet("color:rgb(40,110,255);")
                self.gridLayout.addWidget(self.list2, 4, 4, 1, 1)
                self.list1 = QtWidgets.QListWidget(widget)
                self.list1.setStyleSheet("background-color: rgb(255, 255, 255);\n"
                "border:1px solid black;")
                self.list1.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
                self.list1.setObjectName("list1")
                self.gridLayout.addWidget(self.list1, 4, 1, 1, 1)
                spacerItem7 = QtWidgets.QSpacerItem(10, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
                self.gridLayout.addItem(spacerItem7, 4, 3, 1, 1)
                spacerItem8 = QtWidgets.QSpacerItem(10, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
                self.gridLayout.addItem(spacerItem8, 4, 2, 1, 1)
                self.line = QtWidgets.QFrame(widget)
                self.line.setMaximumSize(QtCore.QSize(16777215, 2))
                self.line.setStyleSheet("background-color: rgb(0, 0, 0);")
                self.line.setFrameShape(QtWidgets.QFrame.HLine)
                self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
                self.line.setObjectName("line")
                self.gridLayout.addWidget(self.line, 2, 0, 1, 6)
                self.l1 = QtWidgets.QLabel(widget)
                self.l1.setAlignment(QtCore.Qt.AlignCenter)
                self.l1.setObjectName("l1")
                self.gridLayout.addWidget(self.l1, 0, 0, 1, 6)
                self.horizontalLayout_7.addLayout(self.gridLayout)
                self.addteamandmatch()
                self.cal.clicked.connect(self.scoreofplayers)

                self.retranslateUi(widget)
                QtCore.QMetaObject.connectSlotsByName(widget)
        def addteamandmatch(self):
                cursor.execute("SELECT DISTINCT team_name FROM teams;")
                fetch_teams = list(map(''.join,cursor.fetchall()))
                for team in fetch_teams:
                        self.como1.addItem(team)
                cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name LIKE 'match%';")
                fetch_match = list(map(''.join,cursor.fetchall()))
                for match in fetch_match:
                        self.como2.addItem(match)

        def scoreofplayers(self):
                team=self.como1.currentText()
                match=self.como2.currentText()
                if team=="Select Team" or match=="Select Match":
                        self.displayerror()
                else:
                        self.totpoints=0 
                        d=list()
                        self.list1.clear()
                        self.list2.clear()
                        self.como1.setEnabled(True)
                        self.como2.setEnabled(True)
                        cursor.execute("SELECT Player FROM teams WHERE team_name=?",(team,))
                        teams=list(map(''.join,cursor.fetchall()))
                        for i in teams:
                                columnnames=cursor.execute("SELECT * FROM '"+match+"' WHERE Player=?",(i,))
                 
                                i='    '+i
                                self.list1.addItem(i)
                                colname=[i[0] for i in columnnames.description]
                                lst=cursor.fetchall() 
                                for i in lst:
                                        d.append(dict(zip(colname,i)))
                        for i in d:
                                p=self.calc(i)
                #'  ' is used to add white spaces
                                item='    '+str(p)
                                self.list2.addItem(item)
                                self.points.setText(str(self.totpoints))
        def calc(self,d):
                        
                points=0
                runscored=d.get("Scored")
                ballsfaced=d.get("Faced")
                fours=d.get("Fours")
                sixes=d.get("Sixes")
                bowl_overs=(d.get("Bowled"))/6
                runs_given=d.get("Given")
                wkts_taken=d.get("Wkts")
                caught_out=d.get("Catches")
                stump=d.get("Stumping")
                field_ro=d.get("Run_out")
                
                points=int(runscored/2)
                if runscored>=50:
                        points+=5
                if runscored>=100:
                        points+=10
                try:
                        sr=(runscored/ballsfaced)*100   
                        if 80<=sr<100:
                                points+=2
                        elif sr>=100:
                                points+=4
                except:
                        pass 
                points=points+fours
                points=points+(2*sixes)
                points=points+(wkts_taken*10)                       
                if wkts_taken>=3:
                        points+=5
                elif wkts_taken>=5:
                        points+=10
                try:
                        er=(runs_given/bowl_overs)
                        if er<=2:
                                points+=10
                        elif 2<er<=3.5:
                                points+=7
                        elif 3.5<er<=4.5:
                                points+=4
                except:
                        pass
                points=points+(10*caught_out)
                points=points+(10*stump)
                points=points+(10*field_ro)
                self.totpoints=self.totpoints+int(points)
                return int(points)

        def displayerror(self):
                errormessage=QtWidgets.QMessageBox()
                errormessage.setText("please select team and match")
                errormessage.setIcon(errormessage.Critical)
                errormessage.exec_()
        def retranslateUi(self, widget):
                _translate = QtCore.QCoreApplication.translate
                widget.setWindowTitle(_translate("widget", "Form"))
                self.l2.setText(_translate("widget", "Players"))
                self.l3.setText(_translate("widget", "Points "))
                self.points.setText(_translate("widget", "####"))
                self.cal.setText(_translate("widget", "Calculate Score"))
                self.l1.setText(_translate("widget", "Evaluate the Performance of your Fantasy Team"))


if __name__ == "__main__":
        import sys
        app = QtWidgets.QApplication(sys.argv)
        widget = QtWidgets.QWidget()
        ui = Ui_widget()
        ui.setupUi(widget)
        widget.show()
        sys.exit(app.exec_())
